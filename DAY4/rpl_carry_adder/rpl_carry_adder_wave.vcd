$date
	Tue Oct 14 07:05:29 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module rpl_carry_adder_tb $end
$var wire 4 ! s [3:0] $end
$var wire 4 " c [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$var integer 32 & i [31:0] $end
$var integer 32 ' j [31:0] $end
$var integer 32 ( k [31:0] $end
$scope module dut $end
$var wire 4 ) a [3:0] $end
$var wire 4 * b [3:0] $end
$var wire 1 % cin $end
$var wire 4 + s [3:0] $end
$var wire 4 , c [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
b0 "
b0 !
$end
#10
b1 !
b1 +
1%
b1 (
#20
b1 !
b1 +
0%
b1 $
b1 *
b1 '
b0 (
#30
b1 "
b1 ,
b10 !
b10 +
1%
b1 (
#40
b0 "
b0 ,
b10 !
b10 +
0%
b10 $
b10 *
b10 '
b0 (
#50
b11 !
b11 +
1%
b1 (
#60
b11 !
b11 +
0%
b11 $
b11 *
b11 '
b0 (
#70
b11 "
b11 ,
b100 !
b100 +
1%
b1 (
#80
b0 "
b0 ,
b100 !
b100 +
0%
b100 $
b100 *
b100 '
b0 (
#90
b101 !
b101 +
1%
b1 (
#100
b101 !
b101 +
0%
b101 $
b101 *
b101 '
b0 (
#110
b1 "
b1 ,
b110 !
b110 +
1%
b1 (
#120
b0 "
b0 ,
b110 !
b110 +
0%
b110 $
b110 *
b110 '
b0 (
#130
b111 !
b111 +
1%
b1 (
#140
b111 !
b111 +
0%
b111 $
b111 *
b111 '
b0 (
#150
b111 "
b111 ,
b1000 !
b1000 +
1%
b1 (
#160
b0 "
b0 ,
b1 !
b1 +
0%
b0 $
b0 *
b1 #
b1 )
b1 &
b0 '
b0 (
#170
b1 "
b1 ,
b10 !
b10 +
1%
b1 (
#180
b10 !
b10 +
0%
b1 $
b1 *
b1 '
b0 (
#190
b11 !
b11 +
1%
b1 (
#200
b0 "
b0 ,
b11 !
b11 +
0%
b10 $
b10 *
b10 '
b0 (
#210
b11 "
b11 ,
b100 !
b100 +
1%
b1 (
#220
b100 !
b100 +
0%
b11 $
b11 *
b11 '
b0 (
#230
b101 !
b101 +
1%
b1 (
#240
b0 "
b0 ,
b101 !
b101 +
0%
b100 $
b100 *
b100 '
b0 (
#250
b1 "
b1 ,
b110 !
b110 +
1%
b1 (
#260
b110 !
b110 +
0%
b101 $
b101 *
b101 '
b0 (
#270
b111 !
b111 +
1%
b1 (
#280
b0 "
b0 ,
b111 !
b111 +
0%
b110 $
b110 *
b110 '
b0 (
#290
b111 "
b111 ,
b1000 !
b1000 +
1%
b1 (
#300
b1000 !
b1000 +
0%
b111 $
b111 *
b111 '
b0 (
#310
b1001 !
b1001 +
1%
b1 (
#320
b0 "
b0 ,
b10 !
b10 +
0%
b0 $
b0 *
b10 #
b10 )
b10 &
b0 '
b0 (
#330
b11 !
b11 +
1%
b1 (
#340
b11 !
b11 +
0%
b1 $
b1 *
b1 '
b0 (
#350
b11 "
b11 ,
b100 !
b100 +
1%
b1 (
#360
b10 "
b10 ,
b100 !
b100 +
0%
b10 $
b10 *
b10 '
b0 (
#370
b101 !
b101 +
1%
b1 (
#380
b101 !
b101 +
0%
b11 $
b11 *
b11 '
b0 (
#390
b11 "
b11 ,
b110 !
b110 +
1%
b1 (
#400
b0 "
b0 ,
b110 !
b110 +
0%
b100 $
b100 *
b100 '
b0 (
#410
b111 !
b111 +
1%
b1 (
#420
b111 !
b111 +
0%
b101 $
b101 *
b101 '
b0 (
#430
b111 "
b111 ,
b1000 !
b1000 +
1%
b1 (
#440
b110 "
b110 ,
b1000 !
b1000 +
0%
b110 $
b110 *
b110 '
b0 (
#450
b1001 !
b1001 +
1%
b1 (
#460
b1001 !
b1001 +
0%
b111 $
b111 *
b111 '
b0 (
#470
b111 "
b111 ,
b1010 !
b1010 +
1%
b1 (
#480
b0 "
b0 ,
b11 !
b11 +
0%
b0 $
b0 *
b11 #
b11 )
b11 &
b0 '
b0 (
#490
b11 "
b11 ,
b100 !
b100 +
1%
b1 (
#500
b100 !
b100 +
0%
b1 $
b1 *
b1 '
b0 (
#510
b101 !
b101 +
1%
b1 (
#520
b10 "
b10 ,
b101 !
b101 +
0%
b10 $
b10 *
b10 '
b0 (
#530
b11 "
b11 ,
b110 !
b110 +
1%
b1 (
#540
b110 !
b110 +
0%
b11 $
b11 *
b11 '
b0 (
#550
b111 !
b111 +
1%
b1 (
#560
b0 "
b0 ,
b111 !
b111 +
0%
b100 $
b100 *
b100 '
b0 (
#570
b111 "
b111 ,
b1000 !
b1000 +
1%
b1 (
#580
b1000 !
b1000 +
0%
b101 $
b101 *
b101 '
b0 (
#590
b1001 !
b1001 +
1%
b1 (
#600
b110 "
b110 ,
b1001 !
b1001 +
0%
b110 $
b110 *
b110 '
b0 (
#610
b111 "
b111 ,
b1010 !
b1010 +
1%
b1 (
#620
b1010 !
b1010 +
0%
b111 $
b111 *
b111 '
b0 (
#630
b1011 !
b1011 +
1%
b1 (
#640
b0 "
b0 ,
b100 !
b100 +
0%
b0 $
b0 *
b100 #
b100 )
b100 &
b0 '
b0 (
#650
b101 !
b101 +
1%
b1 (
#660
b101 !
b101 +
0%
b1 $
b1 *
b1 '
b0 (
#670
b1 "
b1 ,
b110 !
b110 +
1%
b1 (
#680
b0 "
b0 ,
b110 !
b110 +
0%
b10 $
b10 *
b10 '
b0 (
#690
b111 !
b111 +
1%
b1 (
#700
b111 !
b111 +
0%
b11 $
b11 *
b11 '
b0 (
#710
b111 "
b111 ,
b1000 !
b1000 +
1%
b1 (
#720
b100 "
b100 ,
b1000 !
b1000 +
0%
b100 $
b100 *
b100 '
b0 (
#730
b1001 !
b1001 +
1%
b1 (
#740
b1001 !
b1001 +
0%
b101 $
b101 *
b101 '
b0 (
#750
b101 "
b101 ,
b1010 !
b1010 +
1%
b1 (
#760
b100 "
b100 ,
b1010 !
b1010 +
0%
b110 $
b110 *
b110 '
b0 (
#770
b1011 !
b1011 +
1%
b1 (
#780
b1011 !
b1011 +
0%
b111 $
b111 *
b111 '
b0 (
#790
b111 "
b111 ,
b1100 !
b1100 +
1%
b1 (
#800
b0 "
b0 ,
b101 !
b101 +
0%
b0 $
b0 *
b101 #
b101 )
b101 &
b0 '
b0 (
#810
b1 "
b1 ,
b110 !
b110 +
1%
b1 (
#820
b110 !
b110 +
0%
b1 $
b1 *
b1 '
b0 (
#830
b111 !
b111 +
1%
b1 (
#840
b0 "
b0 ,
b111 !
b111 +
0%
b10 $
b10 *
b10 '
b0 (
#850
b111 "
b111 ,
b1000 !
b1000 +
1%
b1 (
#860
b1000 !
b1000 +
0%
b11 $
b11 *
b11 '
b0 (
#870
b1001 !
b1001 +
1%
b1 (
#880
b100 "
b100 ,
b1001 !
b1001 +
0%
b100 $
b100 *
b100 '
b0 (
#890
b101 "
b101 ,
b1010 !
b1010 +
1%
b1 (
#900
b1010 !
b1010 +
0%
b101 $
b101 *
b101 '
b0 (
#910
b1011 !
b1011 +
1%
b1 (
#920
b100 "
b100 ,
b1011 !
b1011 +
0%
b110 $
b110 *
b110 '
b0 (
#930
b111 "
b111 ,
b1100 !
b1100 +
1%
b1 (
#940
b1100 !
b1100 +
0%
b111 $
b111 *
b111 '
b0 (
#950
b1101 !
b1101 +
1%
b1 (
#960
b0 "
b0 ,
b110 !
b110 +
0%
b0 $
b0 *
b110 #
b110 )
b110 &
b0 '
b0 (
#970
b111 !
b111 +
1%
b1 (
#980
b111 !
b111 +
0%
b1 $
b1 *
b1 '
b0 (
#990
b111 "
b111 ,
b1000 !
b1000 +
1%
b1 (
#1000
b110 "
b110 ,
b1000 !
b1000 +
0%
b10 $
b10 *
b10 '
b0 (
#1010
b1001 !
b1001 +
1%
b1 (
#1020
b1001 !
b1001 +
0%
b11 $
b11 *
b11 '
b0 (
#1030
b111 "
b111 ,
b1010 !
b1010 +
1%
b1 (
#1040
b100 "
b100 ,
b1010 !
b1010 +
0%
b100 $
b100 *
b100 '
b0 (
#1050
b1011 !
b1011 +
1%
b1 (
#1060
b1011 !
b1011 +
0%
b101 $
b101 *
b101 '
b0 (
#1070
b111 "
b111 ,
b1100 !
b1100 +
1%
b1 (
#1080
b110 "
b110 ,
b1100 !
b1100 +
0%
b110 $
b110 *
b110 '
b0 (
#1090
b1101 !
b1101 +
1%
b1 (
#1100
b1101 !
b1101 +
0%
b111 $
b111 *
b111 '
b0 (
#1110
b111 "
b111 ,
b1110 !
b1110 +
1%
b1 (
#1120
b0 "
b0 ,
b111 !
b111 +
0%
b0 $
b0 *
b111 #
b111 )
b111 &
b0 '
b0 (
#1130
b111 "
b111 ,
b1000 !
b1000 +
1%
b1 (
#1140
b1000 !
b1000 +
0%
b1 $
b1 *
b1 '
b0 (
#1150
b1001 !
b1001 +
1%
b1 (
#1160
b110 "
b110 ,
b1001 !
b1001 +
0%
b10 $
b10 *
b10 '
b0 (
#1170
b111 "
b111 ,
b1010 !
b1010 +
1%
b1 (
#1180
b1010 !
b1010 +
0%
b11 $
b11 *
b11 '
b0 (
#1190
b1011 !
b1011 +
1%
b1 (
#1200
b100 "
b100 ,
b1011 !
b1011 +
0%
b100 $
b100 *
b100 '
b0 (
#1210
b111 "
b111 ,
b1100 !
b1100 +
1%
b1 (
#1220
b1100 !
b1100 +
0%
b101 $
b101 *
b101 '
b0 (
#1230
b1101 !
b1101 +
1%
b1 (
#1240
b110 "
b110 ,
b1101 !
b1101 +
0%
b110 $
b110 *
b110 '
b0 (
#1250
b111 "
b111 ,
b1110 !
b1110 +
1%
b1 (
#1260
b1110 !
b1110 +
0%
b111 $
b111 *
b111 '
b0 (
#1270
b1111 !
b1111 +
1%
b1 (
#1280
b1000 &
b1000 '
b10 (
